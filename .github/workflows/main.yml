name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 15 * * *'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  windows:
    name: Build on Windowns
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          # rosrust is not supported on Windows
          args: --workspace --exclude arci-ros --exclude openrr-apps --exclude openrr
      - uses: actions-rs/cargo@v1
        with:
          command: build
          # rosrust is not supported on Windows
          args: --manifest-path openrr-apps/Cargo.toml --no-default-features --features gui

  macos:
    name: Build on MacOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build

  build:
    name: Build on Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: ci/ubuntu-install-dependencies.sh
      - uses: actions-rs/cargo@v1
        with:
          command: build

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: ci/ubuntu-install-dependencies.sh
      # testing arci-ros is done in ros1.yaml
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --exclude arci-ros
      - name: cargo test (openrr-apps without ros)
        working-directory: openrr-apps
        run: cargo test --no-default-features --features gui

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: ci/ubuntu-install-dependencies.sh
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets -- -D warnings
