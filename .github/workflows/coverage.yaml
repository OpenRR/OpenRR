name: Code Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

defaults:
  run:
    shell: bash -ieo pipefail {0}

jobs:
  coverage:
    runs-on: ubuntu-latest
    container:
      image: docker://openrr/openrr-coverage-ci:ros2
      options: --security-opt seccomp=unconfined
    env:
      HOME: /root
    steps:
      - uses: actions/checkout@v2
      - run: ci/ubuntu-install-dependencies.sh
      - name: Generate code coverage
        run: |
          # for test of arci-ros2
          source /opt/ros/foxy/setup.bash
          # for test of arci-ros (roscore, rostopic)
          source /opt/ros/noetic/setup.bash
          # TODO: Currently, if we include arci-ros2, the build fails due to "Broken pipe (os error 32)" error.
          cargo tarpaulin --verbose --all-features --workspace --exclude arci-ros2 --out Xml --timeout 60
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          fail_ci_if_error: true
