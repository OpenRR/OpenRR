name: Code Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

defaults:
  run:
    shell: bash -ieo pipefail {0}

jobs:
  coverage:
    runs-on: ubuntu-latest
    container:
      image: docker://ros:foxy-ros1-bridge-focal
      options: --security-opt seccomp=unconfined
    env:
      HOME: /root
    steps:
      - uses: actions/checkout@v2
      - run: |
          sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            curl \
            libasound2-dev \
            libclang-dev \
            libfreetype6-dev \
            libglu1-mesa-dev \
            libudev-dev \
            xorg-dev
      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | \
            sh -s -- -y --profile minimal --default-toolchain nightly
      - run: cargo install cargo-tarpaulin --version 0.16.0
      - name: Generate code coverage
        run: |
          # for test of arci-ros2
          source /opt/ros/foxy/setup.bash
          # for test of arci-ros (roscore, rostopic)
          source /opt/ros/noetic/setup.bash
          cargo tarpaulin --verbose --all-features --workspace --out Xml --timeout 60
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          fail_ci_if_error: true
